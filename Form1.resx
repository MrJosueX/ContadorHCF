<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAZaAAAGWgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACwAAAOMAAAC8AAAAIwAAAAAAAAACAAAABAAA
        AAEAAAAAAAAAAAAAAAEAAAAEAAAAAgAAAAAAAAAnAAAAwQAAAOoAAAAOAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAJAAAA4gAAAP8AAAD6AAAAjwAA
        ABIAAAAAAAAAAgAAAAMAAAADAAAAAgAAAAAAAAATAAAAkgAAAPsAAAD/AAAA4wAAAAoAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAADDAAAA3QAA
        AJcAAAD/AAAA9AAAAHYAAAAIAAAAAAAAAAAAAAAHAAAAdgAAAPUAAAD/AAAAlwAAAOAAAADFAAAAAAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AJUAAAD2AAAAAgAAACsAAADAAAAA/wAAAOYAAABUAAAAUgAAAOQAAAD/AAAAwAAAACoAAAAFAAAA+gAA
        AJcAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAYQAAAP8AAAApAAAAAAAAAAAAAABHAAAA2QAAAP8AAAD/AAAA2gAAAEgAAAAAAAAAAAAA
        AC0AAAD/AAAAYwAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAAAzAAAA/wAAAFEAAAAAAAAABgAAAAAAAAACAAAAaAAAAGsAAAACAAAAAAAA
        AAYAAAAAAAAAVgAAAP8AAAA1AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAAD/AAAAgwAAAAAAAAAEAAAAAwAAAAEAAAAAAAAAAAAA
        AAEAAAADAAAABAAAAAAAAACIAAAA/wAAABIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN0AAAC1AAAAAAAAAAMAAAAAAAAAAQAA
        AAQAAAAEAAAAAQAAAAAAAAADAAAAAAAAALoAAADeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAsQAAAOYAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA6QAAALUAAAAAAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAE4AAAD/AAAAuAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAAA/wAAAFoAAAAAAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABXAAAA/wAA
        AMEAAAAMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA4AAADDAAAA/wAA
        AGMAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAXwAA
        AP8AAAC5AAAACAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAsAAAC8AAAA/wAAAGsAAAAAAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AGoAAAD/AAAAuAAAAAgAAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAQAAAAoAAAC6AAAA/wAAAHYAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAABvAAAA/wAAAJ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAAAAAAAAAAABAAAAAAAAAAAAAACgAAAA/wAAAHsAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAbAAAAP8AAAD8AAAAmQAAAGoAAABPAAAAMAAAABUAAAABAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAACAAAAFQAAADEAAABQAAAAaQAAAJsAAAD9AAAA/wAAAHIAAAAAAAAABAAA
        AAAAAAAAAAAAAgAAAAAAAABLAAAAugAAAM0AAAD3AAAA/wAAAP8AAAD+AAAA/AAAAPEAAAC7AAAAGQAA
        AAAAAAABAAAAAQAAAAAAAAAbAAAAvAAAAPEAAAD8AAAA/gAAAP8AAAD/AAAA+AAAAM8AAAC7AAAASQAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAZAAAATwAAAP8AAAC9AAAAngAA
        AP8AAACDAAAAAAAAAAQAAAAEAAAAAAAAAIcAAAD/AAAAnwAAALsAAAD/AAAAWAAAABkAAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAAAAABBAAAA/wAA
        AE4AAAAAAAAAtAAAAPQAAAAQAAAAAAAAAAAAAAARAAAA9QAAALcAAAAAAAAASAAAAP8AAABNAAAAAAAA
        AAMAAAAAAAAAAwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAA
        AIEAAAD/AAAAIAAAAAAAAAA9AAAA/wAAAHIAAAAAAAAAAAAAAHMAAAD/AAAAQAAAAAAAAAAdAAAA/wAA
        AI4AAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAvQAAAOEAAAAAAAAAAQAAAAAAAADDAAAA6QAAAAYAAAAFAAAA6AAAAMcAAAAAAAAAAQAA
        AAAAAADcAAAAyQAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAYAAADyAAAAqAAAAAAAAAAGAAAAAAAAAEsAAAD/AAAAUgAAAFAAAAD/AAAATwAA
        AAAAAAAHAAAAAAAAAKIAAAD6AAAADAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAKwAAAP8AAABqAAAAAAAAAAQAAAAAAAAAAAAAANQAAADWAAAA1AAA
        ANcAAAABAAAAAAAAAAQAAAAAAAAAZQAAAP8AAAA0AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABgAAAA/wAAADMAAAAAAAAAAwAAAAMAAAAAAAAAXgAA
        AP8AAAD/AAAAYgAAAAAAAAADAAAAAgAAAAAAAAAvAAAA/wAAAGoAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJ4AAAD5AAAACwAAAAAAAAABAAAAAQAA
        AAAAAAAHAAAA4QAAAOUAAAAJAAAAAAAAAAEAAAABAAAAAAAAAAkAAAD1AAAApwAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2QAAAMgAAAAAAAAAAgAA
        AAAAAAAAAAAAAgAAAAAAAADKAAAAzwAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAMMAAADgAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABYAAAD/AAAAiwAA
        AAAAAAAEAAAAAAAAAAAAAAACAAAAAAAAAMsAAADQAAAAAAAAAAIAAAAAAAAAAAAAAAQAAAAAAAAAhQAA
        AP8AAAAbAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQwAA
        AP8AAABPAAAAAAAAAAMAAAAAAAAAAAAAAAIAAAAAAAAAywAAAM8AAAAAAAAAAgAAAAAAAAAAAAAAAwAA
        AAAAAABLAAAA/wAAAEoAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAAB+AAAA/wAAAB4AAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAADLAAAAzwAAAAAAAAACAAAAAAAA
        AAAAAAACAAAAAAAAABsAAAD/AAAAhQAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAALwAAADlAAAAAgAAAAQAAAAFAAAABAAAAAQAAAAGAAAAAAAAAMwAAADQAAAAAAAA
        AAYAAAAEAAAABAAAAAUAAAAEAAAAAQAAAOEAAADCAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAEAAAA8QAAAKcAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAygAA
        AM8AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAogAAAPUAAAAHAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAC4AAAD/AAAAwAAAAH8AAACKAAAAiAAAAIgAAACIAAAAiQAA
        AIIAAADnAAAA6QAAAIIAAACJAAAAiAAAAIgAAACIAAAAigAAAH8AAAC+AAAA/wAAADIAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAANgAAAP8AAAD/AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAAOgAA
        AAAAAAADAAAAAAAAAAAAAAAA+hGIX/oEIF/5AYCf+QAAn/kQCJ/9FCi//RGIv/iUCR/0m9kv6RPIl9IX
        6EukK9QliAWgEZESSYmgCZAEoAJABeQCQAehEYiF8RGIj/koFJ/6KBRf+iQUX/IkJE/yJCRP8kJCb/RC
        Qi/kQkIn5FJKJ+QCQCfokkkX6AAAF+gAABc=
</value>
  </data>
</root>